{"version":3,"sources":["components/Carousel/Carousel.tsx","components/Form/Form.tsx","App.tsx","index.tsx"],"names":["Carousel","state","scroll","getScrollMax","props","images","step","itemWidth","length","onClick","action","infinite","setState","this","frameSize","animationDuration","className","style","width","transform","transitionDuration","map","image","i","src","alt","height","classNames","buttonDisabled","type","React","Component","Form","htmlFor","id","name","defaultValue","onChange","target","value","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4238c18b.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean;\n};\n\ntype State = {\n  scroll: number,\n};\n\nexport class Carousel extends React.Component<Props, State> {\n  state = {\n    scroll: 0,\n  };\n\n  getScrollMax = () => {\n    const {\n      images,\n      step,\n      itemWidth,\n    } = this.props;\n\n    const scrollMax = (images.length * itemWidth) - (step * itemWidth);\n\n    return scrollMax;\n  };\n\n  onClick = (action: string) => {\n    const { infinite, step, itemWidth } = this.props;\n\n    this.setState((state: State) => {\n      let { scroll } = state;\n\n      if (infinite && scroll === this.getScrollMax()) {\n        return { scroll: 0 };\n      }\n\n      scroll = (action === 'prev') ? (scroll - step * itemWidth) : (scroll + step * itemWidth);\n\n      scroll = scroll > this.getScrollMax() ? this.getScrollMax() : scroll;\n      scroll = scroll < 0 ? 0 : scroll;\n\n      return { scroll };\n    });\n  };\n\n  render() {\n    const {\n      frameSize,\n      itemWidth,\n      images,\n      animationDuration,\n    } = this.props;\n\n    const {\n      scroll,\n    } = this.state;\n\n    return (\n      <div\n        className=\"Carousel\"\n        style={{ width: `${frameSize * itemWidth}px` }}\n      >\n        <ul\n          className=\"Carousel__list\"\n          style={{\n            transform: `translateX(${-scroll}px)`,\n            width: `${images.length * itemWidth}px`,\n            transitionDuration: `${animationDuration}ms`,\n          }}\n        >\n          {images.map((image: string, i: number) => (\n            <li key={+i}>\n              <img\n                src={image}\n                alt=\"1\"\n                style={{\n                  width: `${itemWidth}px`,\n                  height: `${itemWidth}px`,\n                }}\n              />\n            </li>\n          ))}\n        </ul>\n        <div className=\"button-container\">\n          <button\n            className={classNames('button', { buttonDisabled: scroll !== 0 })}\n            type=\"button\"\n            onClick={() => {\n              this.onClick('prev');\n            }}\n          >\n            ←\n          </button>\n          <button\n            className={classNames('button', { buttonDisabled: scroll !== this.getScrollMax() })}\n            type=\"button\"\n            onClick={() => {\n              this.onClick('next');\n            }}\n          >\n            →\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n","/* eslint-disable @typescript-eslint/no-unused-expressions */\nimport React from 'react';\nimport { Carousel } from '../Carousel';\nimport './Form.scss';\n\ntype Props = {\n  images: string[],\n};\n\ntype State = {\n  frameSize: number,\n  itemWidth: number,\n  step: number,\n  animationDuration: number,\n  infinite: boolean,\n};\n\nexport class Form extends React.Component<Props, State> {\n  state = {\n    frameSize: 3,\n    itemWidth: 130,\n    step: 3,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  render() {\n    const {\n      frameSize,\n      itemWidth,\n      step,\n      animationDuration,\n      infinite,\n    } = this.state;\n\n    return (\n      <>\n        <div\n          className=\"field\"\n          style={{ width: `${frameSize * itemWidth}px` }}\n        >\n          <label className=\"label\" htmlFor=\"width\">\n            Frame size\n            <input\n              id=\"width\"\n              className=\"input\"\n              type=\"number\"\n              name=\"frameSize\"\n              defaultValue={frameSize}\n              onChange={({ target }) => {\n                this.setState({ frameSize: +target.value });\n              }}\n            />\n          </label>\n          <label className=\"label\" htmlFor=\"width\">\n            Item width\n            <input\n              id=\"width\"\n              className=\"input\"\n              type=\"number\"\n              name=\"itemWidth\"\n              defaultValue={itemWidth}\n              onChange={({ target }) => {\n                this.setState({ itemWidth: +target.value });\n              }}\n            />\n          </label>\n          <label className=\"label\" htmlFor=\"step\">\n            Step\n            <input\n              id=\"step\"\n              className=\"input\"\n              type=\"number\"\n              defaultValue={step}\n              onChange={({ target }) => {\n                this.setState({ step: +target.value });\n              }}\n            />\n          </label>\n          <label className=\"label\" htmlFor=\"duration\">\n            Animation duration\n            <input\n              id=\"duration\"\n              className=\"input\"\n              type=\"number\"\n              defaultValue={animationDuration}\n              onChange={({ target }) => {\n                this.setState({ animationDuration: +target.value });\n              }}\n            />\n          </label>\n          <label className=\"label\" htmlFor=\"Infinite\">\n            Infinite\n            <input\n              type=\"checkbox\"\n              id=\"Infinite\"\n              className=\"checkbox\"\n              onChange={() => {\n                this.setState({\n                  infinite: !infinite,\n                });\n              }}\n            />\n          </label>\n        </div>\n        <Carousel\n          images={this.props.images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          infinite={infinite}\n        />\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Form } from './components/Form';\n\ninterface State {\n  images: string[];\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n  };\n\n  render() {\n    const { images } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1>Carousel with {images.length} images</h1>\n        <Form images={images} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}