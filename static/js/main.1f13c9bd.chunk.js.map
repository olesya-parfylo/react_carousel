{"version":3,"sources":["components/Carousel/Carousel.tsx","components/Form/Form.tsx","App.tsx","index.tsx"],"names":["Carousel","state","scroll","scrollInfinite","count","getScrollMax","props","images","step","itemWidth","length","onClick","action","frameSize","setState","this","animationDuration","setInterval","infinite","className","style","width","transform","map","image","i","src","alt","height","classNames","buttonDisabled","type","React","Component","Form","htmlFor","id","defaultValue","onChange","target","value","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1f13c9bd.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean;\n};\n\ntype State = {\n  scroll: number,\n  scrollInfinite: number,\n  count: number,\n};\n\nexport class Carousel extends React.Component<Props, State> {\n  state = {\n    scroll: 0,\n    scrollInfinite: 0,\n    count: 0,\n  };\n\n  componentDidMount() {\n    const {\n      frameSize,\n      animationDuration,\n    } = this.props;\n\n    setInterval(() => {\n      this.setState((state: State) => {\n        let { scrollInfinite, count } = state;\n\n        scrollInfinite = count > 0 ? scrollInfinite - frameSize : scrollInfinite + frameSize;\n\n        if (scrollInfinite >= this.getScrollMax()) {\n          scrollInfinite = this.getScrollMax();\n\n          count += 1;\n        }\n\n        if (scrollInfinite <= 0) {\n          scrollInfinite = 0;\n\n          count = 0;\n        }\n\n        return ({ scrollInfinite, count });\n      });\n    }, animationDuration);\n  }\n\n  getScrollMax = () => {\n    const {\n      images,\n      step,\n      itemWidth,\n    } = this.props;\n\n    const scrollMax = (images.length * itemWidth) - (step * itemWidth);\n\n    return scrollMax;\n  };\n\n  onClick = (action: string) => {\n    let { scroll } = this.state;\n    const {\n      frameSize,\n    } = this.props;\n\n    scroll = (action === 'prev') ? (scroll - frameSize) : (scroll + frameSize);\n\n    scroll = scroll > this.getScrollMax() ? this.getScrollMax() : scroll;\n    scroll = scroll < 0 ? 0 : scroll;\n    this.setState({ scroll });\n  };\n\n  render() {\n    const {\n      frameSize,\n      itemWidth,\n      infinite,\n      images,\n    } = this.props;\n\n    const {\n      scrollInfinite,\n      scroll,\n    } = this.state;\n\n    return (\n      <div\n        className=\"Carousel\"\n        style={{ width: `${frameSize}px` }}\n      >\n        <ul\n          className=\"Carousel__list\"\n          style={infinite\n            ? {\n              transform: `translateX(${-scrollInfinite}px)`,\n              width: `${images.length * itemWidth}px`,\n            }\n            : {\n              transform: `translateX(${-scroll}px)`,\n              width: `${images.length * itemWidth}px`,\n            }}\n        >\n          {images.map((image: string, i: number) => (\n            <li key={+i}>\n              <img\n                src={image}\n                alt=\"1\"\n                style={{\n                  width: `${itemWidth}px`,\n                  height: `${itemWidth}px`,\n                }}\n              />\n            </li>\n          ))}\n        </ul>\n        <div className=\"button-container\">\n          <button\n            className={classNames('button', { buttonDisabled: scroll !== 0 })}\n            type=\"button\"\n            onClick={() => {\n              this.onClick('prev');\n            }}\n          >\n            ←\n          </button>\n          <button\n            className={classNames('button', { buttonDisabled: scroll !== this.getScrollMax() })}\n            type=\"button\"\n            onClick={() => {\n              this.onClick('next');\n            }}\n          >\n            →\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n","/* eslint-disable @typescript-eslint/no-unused-expressions */\nimport React from 'react';\nimport { Carousel } from '../Carousel';\nimport './Form.scss';\n\ntype Props = {\n  images: string[],\n};\n\ntype State = {\n  frameSize: number,\n  itemWidth: number,\n  step: number,\n  animationDuration: number,\n  infinite: boolean,\n};\n\nexport class Form extends React.Component<Props, State> {\n  state = {\n    frameSize: 390,\n    itemWidth: 130,\n    step: 3,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  render() {\n    const {\n      frameSize,\n      itemWidth,\n      step,\n      animationDuration,\n      infinite,\n    } = this.state;\n\n    return (\n      <>\n        <div\n          className=\"field\"\n          style={{ width: `${frameSize}px` }}\n        >\n          <label className=\"label\" htmlFor=\"width\">\n            Item width\n            <input\n              id=\"width\"\n              className=\"input\"\n              type=\"number\"\n              defaultValue={itemWidth}\n              onChange={({ target }) => {\n                this.setState((state: State) => {\n                  return (\n                    {\n                      itemWidth: +target.value,\n                      frameSize: +target.value * state.step,\n                    }\n                  );\n                });\n              }}\n            />\n          </label>\n          <label className=\"label\" htmlFor=\"step\">\n            Step\n            <input\n              id=\"step\"\n              className=\"input\"\n              type=\"number\"\n              defaultValue={step}\n              onChange={({ target }) => {\n                this.setState((state: State) => {\n                  return (\n                    {\n                      step: +target.value,\n                      frameSize: +target.value * state.itemWidth,\n                    }\n                  );\n                });\n              }}\n            />\n          </label>\n          <label className=\"label\" htmlFor=\"duration\">\n            Animation duration\n            <input\n              id=\"duration\"\n              className=\"input\"\n              type=\"number\"\n              defaultValue={animationDuration}\n              onChange={({ target }) => {\n                this.setState({ animationDuration: +target.value });\n              }}\n            />\n          </label>\n          <label className=\"label\" htmlFor=\"Infinite\">\n            Infinite\n            <input\n              type=\"checkbox\"\n              id=\"Infinite\"\n              className=\"checkbox\"\n              onChange={() => {\n                this.setState({\n                  infinite: !infinite,\n                });\n              }}\n            />\n          </label>\n        </div>\n        <Carousel\n          images={this.props.images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          infinite={infinite}\n        />\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Form } from './components/Form';\n\ninterface State {\n  images: string[];\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n  };\n\n  render() {\n    const { images } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1>Carousel with {images.length} images</h1>\n        <Form images={images} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}